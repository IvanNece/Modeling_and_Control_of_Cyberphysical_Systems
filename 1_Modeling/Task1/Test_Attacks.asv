%% TASK 1 - ANALISI VARIAZIONE NUMERO DI SENSORI ATTACCATI (h)

% Parametri base
n = 15; q = 30; sigma = 1e-2;
lambda = 0.1;
max_iter = 3000; num_runs = 20; tol = 1e-10;
G = [C, eye(q)];
nu_ista = 1 / norm(G, 2)^2;
nu_ijam = 0.7;

% Valori di h da testare
h_values = [1, 3, 5, 10, 15];

for hv = 1:length(h_values)
    h = h_values(hv);
    fprintf('\\n===== h = %d sensori attaccati =====\\n', h);

    state_errors_ista_all = zeros(max_iter, num_runs);
    attack_errors_ista_all = zeros(max_iter, num_runs);
    state_errors_ijam_all = zeros(max_iter, num_runs);
    attack_errors_ijam_all = zeros(max_iter, num_runs);

    for run = 1:num_runs
        C = randn(q, n);
        x_true = 2 + rand(n,1);
        neg_idx = rand(n,1) > 0.5;
        x_true(neg_idx) = -3 + rand(sum(neg_idx),1);
        attack_idx = randperm(q, h);
        a_true = zeros(q,1);
        a_true(attack_idx) = (-1).^randi([0,1], h, 1) .* (4 + rand(h,1));
        y = C * x_true + a_true + sigma * randn(q,1);

        [~, ~, se_ista, ae_ista] = ISTA(C, y, lambda, nu_ista, max_iter, tol, x_true, a_true);
        [~, ~, se_ijam, ae_ijam] = IJAM(C, y, lambda, nu_ijam, max_iter, tol, x_true, a_true);

        state_errors_ista_all(:, run) = se_ista;
        attack_errors_ista_all(:, run) = ae_ista;
        state_errors_ijam_all(:, run) = se_ijam;
        attack_errors_ijam_all(:, run) = ae_ijam;
    end

    % Media per ogni iterazione
    state_errors_ista_mean = mean(state_errors_ista_all, 2, 'omitnan');
    attack_errors_ista_mean = mean(attack_errors_ista_all, 2, 'omitnan');
    state_errors_ijam_mean = mean(state_errors_ijam_all, 2, 'omitnan');
    attack_errors_ijam_mean = mean(attack_errors_ijam_all, 2, 'omitnan');

    % Plot
    figure;
    loglog(1:max_iter, state_errors_ista_mean, 'b', 'LineWidth', 2); hold on;
    loglog(1:max_iter, state_errors_ijam_mean, 'r', 'LineWidth', 2);
    xlabel('Iterations (log scale)');
    ylabel('Mean Squared State Error');
    title(['State Error - h = ', num2str(h)]);
    legend('ISTA', 'IJAM');
    grid on;

    filename = sprintf('Plot_atacks/StateError_lambda_%.2f.png', lambda);
    saveas(gcf, filename);

    figure;
    loglog(1:max_iter, attack_errors_ista_mean, 'b', 'LineWidth', 2); hold on;
    loglog(1:max_iter, attack_errors_ijam_mean, 'r', 'LineWidth', 2);
    xlabel('Iterations (log scale)');
    ylabel('Mean Support Attack Error');
    title(['Support Error - h = ', num2str(h)]);
    legend('ISTA', 'IJAM');
    grid on;

    filename = sprintf('Plot_lambda/SupportError_lambda_%.2f.png', lambda);
    saveas(gcf, filename);

end
